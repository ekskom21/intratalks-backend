enum EventTime {
    BREAKFAST
    LUNCH
    DINNER
}

type Location {
    lat: Float!
    lng: Float!
    name: String!
}

type Event {
    _id: ID!
    title: String!
    time: EventTime!
    location: Location!
    description: String!
    company: Company!
}

type ColorSet {
    primary: String!
    secondary: String!
}

type Company {
    _id: ID!
    events: [Event!]!
    name: String!
    colors: ColorSet!
    description: String!
}

type UserInterest {
    user_id: String!
    breakfast: Event
    lunch: Event
    dinner: Event
}

"Almost the same as UserInterest, but the events can't be null here anymore."
type AssignedEvents {
    user_id: String!
    breakfast: Event!
    lunch: Event!
    dinner: Event!
}

type Query {
    "Get all companies. The companies contain events."
    companies: [Company]!

    "Get a single company. The company will have events."
    company(_id: String!): Company

    "Get a single event."
    event(_id: String!): Event

    "Get all events"
    events: [Event!]!

    "Check registration state of a user"
    userRegistered: RegistrationState!

    "Get your current desired events."
    desiredEvents: UserInterest

    "Get your assigned events"
    assignedEvents: AssignedEvents

    "Check if you have attended an event"
    attendedEvent(event_id: ID!): Boolean!
}
